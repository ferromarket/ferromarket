version: '3.7'

x-common-variables: &common-variables
  MYSQL_DATABASE: ${MYSQL_DATABASE}
  MYSQL_USER: ${MYSQL_USER}
  MYSQL_PASSWORD: ${MYSQL_PASSWORD}

services:
  database:
    image: mariadb:10.7
    restart: unless-stopped
    cap_add:
      - SYS_NICE
    volumes:
      - "./db:/docker-entrypoint-initdb.d"
      - database:/var/lib/mysql
    networks:
      - network
    ports:
      - "${MYSQL_PORT}:3306"
    environment:
      <<: *common-variables
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_ROOT_HOST: ${MYSQL_HOST}

  nginx:
    image: nginx:1.21
    depends_on:
      - backend
      - frontend
    restart: unless-stopped
    volumes:
      - "./nginx.conf:/etc/nginx/conf.d/default.conf"
    networks:
      - network
    ports:
      - "3050:80"

  phpmyadmin:
    image: phpmyadmin:5.0
    restart: unless-stopped
    networks:
      - network
    ports:
      - 8000:80
    depends_on:
      - database
    environment:
      PMA_HOST: database

  frontend:
    #image: ccromer/frontend:latest
    restart: unless-stopped
    stdin_open: true
    environment:
      - CHOKIDAR_USEPOLLING=true
    build:
      dockerfile: Dockerfile
      context: ./frontend
    networks:
      - network
    labels:
      - "com.centurylinklabs.watchtower.scope=${WATCHTOWER_SCOPE}"

  backend:
    #image: ccromer/backend:latest
    restart: unless-stopped
    build:
      dockerfile: Dockerfile
      context: "./backend"
    depends_on:
      - database
    networks:
      - network
    environment:
      <<: *common-variables
      MYSQL_HOST_IP: ${MYSQL_HOST_IP}
    labels:
      - "com.centurylinklabs.watchtower.scope=${WATCHTOWER_SCOPE}"

  watchtower:
    image: containrrr/watchtower:1.4.0
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /home/cromer/.docker/config.json:/config.json
    command: --interval ${WATCHTOWER_POLL_INTERVAL} --cleanup --scope ${WATCHTOWER_SCOPE}

volumes:
  database:

networks:
  network:
