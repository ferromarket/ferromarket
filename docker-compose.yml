version: '3.7'

x-common-variables: &common-variables
  MYSQL_DATABASE: ${MYSQL_DATABASE}
  MYSQL_USER: ${MYSQL_USER}
  MYSQL_PASSWORD: ${MYSQL_PASSWORD}

services:
  database:
    image: mariadb:10.7.4
    restart: on-failure
    cap_add:
      - SYS_NICE
    volumes:
      - "./db:/docker-entrypoint-initdb.d"
      - database:/var/lib/mysql
    networks:
      - network
    ports:
      - "${MYSQL_PORT}:3306"
    environment:
      <<: *common-variables
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_ROOT_HOST: ${MYSQL_HOST}

  nginx:
    image: nginx:1.21.6
    depends_on:
      - backend
      - frontend
    restart: on-failure
    volumes:
      - "./nginx.conf:/etc/nginx/conf.d/default.conf"
    networks:
      - network
    ports:
      - "3050:80"

  mdbook:
    image: peaceiris/mdbook:v0.4.18
    restart: on-failure
    stdin_open: true
    tty: true
    volumes:
      - "./manual/src:/book/src"
      - "./manual/book.toml:/book/book.toml"
    networks:
      - network
    command:
      - serve
      - --hostname
      - '0.0.0.0'

  frontend:
    #image: ccromer/frontend:master
    restart: on-failure
    stdin_open: true
    environment:
      - CHOKIDAR_USEPOLLING=true
    build:
      dockerfile: Dockerfile
      context: ./frontend
    networks:
      - network
    labels:
      - "com.centurylinklabs.watchtower.scope=${WATCHTOWER_SCOPE}"

  backend:
    #image: ccromer/backend:master
    restart: on-failure
    build:
      dockerfile: Dockerfile
      context: "./backend"
    depends_on:
      - database
    networks:
      - network
    environment:
      <<: *common-variables
      MYSQL_HOST_IP: ${MYSQL_HOST_IP}
    labels:
      - "com.centurylinklabs.watchtower.scope=${WATCHTOWER_SCOPE}"

  swagger:
    image: swaggerapi/swagger-ui:v4.10.3
    volumes:
      - ./swagger.json:/app/swagger.json
    networks:
      - network
    environment:
      PORT: 3002

  watchtower:
    image: containrrr/watchtower:1.4.0
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /home/cromer/.docker/config.json:/config.json
    command: --interval ${WATCHTOWER_POLL_INTERVAL} --cleanup --scope ${WATCHTOWER_SCOPE}

volumes:
  database:

networks:
  network:
